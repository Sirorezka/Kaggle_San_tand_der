require(spatialEco)
require(sp)
install.packages("spatialEco")
require(spatialEco)
require(sp)
data(meuse)
~x
coordinates(meuse) = ~x+y
gridded(meuse.grid) <- TRUE
meuse.xy
data(meuse)
View(meuse)
meuse.xy = meuse[c("x", "y")]
coordinates(meuse.xy) <- ~x+y
View(meuse)
class(meuse.xy)
intersect((meuse.xy, meuse.xy))
intersect(c(meuse.xy, meuse.xy))
intersect(meuse.xy, meuse.xy)
require(raster)
intersect(meuse.xy, meuse.xy)
tt <- intersect(meuse.xy, meuse.xy)
tt
r1 = cbind(c(180114, 180553, 181127, 181477, 181294, 181007, 180409,
180162, 180114), c(332349, 332057, 332342, 333250, 333558, 333676,
332618, 332413, 332349))
r2 = cbind(c(180042, 180545, 180553, 180314, 179955, 179142, 179437,
179524, 179979, 180042), c(332373, 332026, 331426, 330889, 330683,
331133, 331623, 332152, 332357, 332373))
r3 = cbind(c(179110, 179907, 180433, 180712, 180752, 180329, 179875,
179668, 179572, 179269, 178879, 178600, 178544, 179046, 179110),
c(331086, 330620, 330494, 330265, 330075, 330233, 330336, 330004,
329783, 329665, 329720, 329933, 330478, 331062, 331086))
r4 = cbind(c(180304, 180403,179632,179420,180304),
c(332791, 333204, 333635, 333058, 332791))
sr1=Polygons(list(Polygon(r1)),"r1")
sr2=Polygons(list(Polygon(r2)),"r2")
sr3=Polygons(list(Polygon(r3)),"r3")
sr4=Polygons(list(Polygon(r4)),"r4")
sr=SpatialPolygons(list(sr1,sr2,sr3,sr4))
srdf=SpatialPolygonsDataFrame(sr, data.frame(cbind(1:4,5:2),
row.names=c("r1","r2","r3","r4")))
plot(sr1)
polygon(r1)
data(meuse)
coordinates(meuse) = ~x+y
polygon(r1)
plot(meuse)
polygon(r1)
polygon(r2)
polygon(r3)
polygon(r4)
over(sr, meuse[,1:4], fn = mean)
plot
showMethods("plot")
plot(meuse,  col = "red")
polygon(r1)
polygon(r2)
polygon(r3)
polygon(r4)
over(sr, meuse[,1:4], fn = mean)
points (meuse[,1:4])
euse[,1:4]
meuse[,1:4]
over(sr, meuse[,1:4], fn = mean)
getwd()
getwd()
mywd <- "/home/sirorezka/python_proj/Santander Customer Satisfaction"
setwd (mywd)
train = read.csv("data/train.csv", header = TRUE)
train = read.csv("Data/train.csv", header = TRUE)
response <- train$TARGET
train <-train[-c(1,371)]
zero_var = nearZeroVar(train, names=TRUE, freqCut = 95/5,uniqueCut = 10,saveMetrics = TRUE)
require (caret)
install.packages("caret")
zero_var = nearZeroVar(train, names=TRUE, freqCut = 95/5,uniqueCut = 10,saveMetrics = TRUE)
require (caret)
install.packages("car")
install.packages("pbkrtest")
